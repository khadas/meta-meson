diff --git a/gst-libs/gst/video/video-color.c b/gst-libs/gst/video/video-color.c
index 7075a73..5f1c362 100644
--- a/gst-libs/gst/video/video-color.c
+++ b/gst-libs/gst/video/video-color.c
@@ -385,6 +385,7 @@ gst_video_color_matrix_get_Kr_Kb (GstVideoColorMatrix matrix, gdouble * Kr,
       *Kb = 0.087;
       break;
     case GST_VIDEO_COLOR_MATRIX_BT2020:
+    case GST_VIDEO_COLOR_MATRIX_BT2020_CL:
       *Kr = 0.2627;
       *Kb = 0.0593;
       break;
@@ -491,6 +492,16 @@ gst_video_transfer_function_encode (GstVideoTransferFunction func, gdouble val)
       else
         res = 1.0993 * pow (val, 0.45) - 0.0993;
       break;
+     case GST_VIDEO_TRANSFER_SMPTE_ST_2084:
+         /* TODO: add the code to correctly return the transfer value */
+         res = val;
+       break;
+     case GST_VIDEO_TRANSFER_ARIB_STD_B67:
+       if (val <= 1)
+          res = 0.5 * sqrt(val);
+       else
+          res = 0.17883277 * log(val - 0.28466892) + 0.55991073;
+       break;
     case GST_VIDEO_TRANSFER_ADOBERGB:
       res = pow (val, 1.0 / 2.19921875);
       break;
@@ -508,20 +519,20 @@ gst_video_transfer_function_encode (GstVideoTransferFunction func, gdouble val)
       res = pow ((c1 + c2 * Ln) / (1.0 + c3 * Ln), m2);
       break;
     }
-    case GST_VIDEO_TRANSFER_ARIB_STD_B67:
+/*    case GST_VIDEO_TRANSFER_ARIB_STD_B67:
     {
       gdouble a = 0.17883277;
       gdouble b = 0.28466892;
       gdouble c = 0.55991073;
 
-      /* For [0, 1] normalized source as defined by HEVC specification */
+      /* For [0, 1] normalized source as defined by HEVC specification 
       if (val > (1.0 / 12.0))
         res = a * log (12.0 * val - b) + c;
       else
         res = sqrt (3.0 * val);
 
       break;
-    }
+    }*/
   }
   return res;
 }
@@ -624,6 +635,16 @@ gst_video_transfer_function_decode (GstVideoTransferFunction func, gdouble val)
       else
         res = pow ((val + 0.0993) / 1.0993, 1.0 / 0.45);
       break;
+    case GST_VIDEO_TRANSFER_SMPTE_ST_2084:
+        /* TODO: add the code to correctly return the transfer value */
+        res = val;
+      break;
+    case GST_VIDEO_TRANSFER_ARIB_STD_B67:
+      if (val <= 0.5)
+        res = pow(val / 0.5, 2) ;
+      else
+        res = exp((val - 0.55991073)/0.17883277) + 0.28466892;
+      break;
     case GST_VIDEO_TRANSFER_ADOBERGB:
       res = pow (val, 2.19921875);
       break;
@@ -640,7 +661,7 @@ gst_video_transfer_function_decode (GstVideoTransferFunction func, gdouble val)
       res = pow (tmp2 / (c2 - c3 * tmp), 1 / m1);
       break;
     }
-    case GST_VIDEO_TRANSFER_ARIB_STD_B67:
+/*    case GST_VIDEO_TRANSFER_ARIB_STD_B67:
     {
       gdouble a = 0.17883277;
       gdouble b = 0.28466892;
@@ -652,7 +673,7 @@ gst_video_transfer_function_decode (GstVideoTransferFunction func, gdouble val)
         res = val * val / 3.0;
 
       break;
-    }
+    }*/
   }
   return res;
 }
diff --git a/gst-libs/gst/video/video-color.h b/gst-libs/gst/video/video-color.h
index c6ff3c8..be84469 100644
--- a/gst-libs/gst/video/video-color.h
+++ b/gst-libs/gst/video/video-color.h
@@ -64,7 +64,8 @@ typedef enum {
   GST_VIDEO_COLOR_MATRIX_BT709,
   GST_VIDEO_COLOR_MATRIX_BT601,
   GST_VIDEO_COLOR_MATRIX_SMPTE240M,
-  GST_VIDEO_COLOR_MATRIX_BT2020
+  GST_VIDEO_COLOR_MATRIX_BT2020,
+  GST_VIDEO_COLOR_MATRIX_BT2020_CL
 } GstVideoColorMatrix;
 
 GST_VIDEO_API
@@ -124,6 +125,7 @@ typedef enum {
   GST_VIDEO_TRANSFER_LOG100,
   GST_VIDEO_TRANSFER_LOG316,
   GST_VIDEO_TRANSFER_BT2020_12,
+  GST_VIDEO_TRANSFER_SMPTE_ST_2084,
   GST_VIDEO_TRANSFER_ADOBERGB,
   GST_VIDEO_TRANSFER_BT2020_10,
   GST_VIDEO_TRANSFER_SMPTE2084,
diff --git a/gst-libs/gst/video/video.h b/gst-libs/gst/video/video.h
index a31562a..341b8b8 100644
--- a/gst-libs/gst/video/video.h
+++ b/gst-libs/gst/video/video.h
@@ -35,6 +35,7 @@ typedef struct _GstVideoAlignment GstVideoAlignment;
 #include <gst/video/video-converter.h>
 #include <gst/video/video-scaler.h>
 #include <gst/video/video-multiview.h>
+#include <gst/video/video-hdr.h>
 
 G_BEGIN_DECLS
 
