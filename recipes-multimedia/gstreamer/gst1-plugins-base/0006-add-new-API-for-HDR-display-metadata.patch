From 2c6cb2551daed91c3b6aa77d2a54072952c6dc0f Mon Sep 17 00:00:00 2001
From: "sheng.liu" <sheng.liu@amlogic.com>
Date: Wed, 3 Aug 2022 14:40:21 +0800
Subject: [PATCH] gstreamer1.0-plugins-base: CB1 add API for HDR
 display-metadata   [1/1]

PD#SWPL-89073

Problem:
matroska demux has no case to parse display-metadata

Solution:
Add case to parse display-metadata sync from source code 1.20.3

Verify:
AH212
---
 gst-libs/gst/video/video-hdr.c | 81 ++++++++++++++++++++++++++++++++++
 gst-libs/gst/video/video-hdr.h | 38 ++++++++++++++++
 2 files changed, 119 insertions(+)

diff --git a/gst-libs/gst/video/video-hdr.c b/gst-libs/gst/video/video-hdr.c
index 8e490f9..1edaa94 100644
--- a/gst-libs/gst/video/video-hdr.c
+++ b/gst-libs/gst/video/video-hdr.c
@@ -26,6 +26,37 @@
 
 #include "video-hdr.h"
 
+#define MASTERING_FORMAT \
+  "%d:%d:" \
+  "%d:%d:" \
+  "%d:%d:" \
+  "%d:%d:" \
+  "%d:%d"
+
+#define MASTERING_PRINTF_ARGS(m) \
+  (m)->display_primaries[0].x, (m)->display_primaries[0].y, \
+  (m)->display_primaries[1].x, (m)->display_primaries[1].y, \
+  (m)->display_primaries[2].x, (m)->display_primaries[2].y, \
+  (m)->white_point.x, (m)->white_point.y, \
+  (m)->max_display_mastering_luminance, \
+  (m)->min_display_mastering_luminance
+
+/**
+ * gst_video_mastering_display_info_init:
+ * @minfo: a #GstVideoMasteringDisplayInfo
+ *
+ * Initialize @minfo
+ *
+ * Since: 1.18
+ */
+void
+gst_video_mastering_display_info_init (GstVideoMasteringDisplayInfo * minfo)
+{
+  g_return_if_fail (minfo != NULL);
+
+  memset (minfo, 0, sizeof (GstVideoMasteringDisplayInfo));
+}
+
 /**
  * gst_video_mastering_display_metadata_init:
  * @minfo: a #GstVideoMasteringDisplayMetadata
@@ -99,6 +130,25 @@ gboolean
   return FALSE;
 }
 
+/**
+ * gst_video_mastering_display_info_to_string:
+ * @minfo: a #GstVideoMasteringDisplayInfo
+ *
+ * Convert @minfo to its string representation
+ *
+ * Returns: (transfer full): a string representation of @minfo
+ *
+ * Since: 1.18
+ */
+gchar *
+gst_video_mastering_display_info_to_string (const GstVideoMasteringDisplayInfo *
+    minfo)
+{
+  g_return_val_if_fail (minfo != NULL, NULL);
+
+  return g_strdup_printf (MASTERING_FORMAT, MASTERING_PRINTF_ARGS (minfo));
+}
+
 /**
  * gst_video_mastering_display_metadata_has_primaries:
  * @minfo: a #GstVideoMasteringDisplayMetadata
@@ -134,6 +184,37 @@ gst_video_mastering_display_metadata_has_luminance (const
   return (minfo->max_luma > 0);
 }
 
+/**
+ * gst_video_mastering_display_info_add_to_caps:
+ * @minfo: a #GstVideoMasteringDisplayInfo
+ * @caps: a #GstCaps
+ *
+ * Set string representation of @minfo to @caps
+ *
+ * Returns: %TRUE if @minfo was successfully set to @caps
+ *
+ * Since: 1.18
+ */
+gboolean
+gst_video_mastering_display_info_add_to_caps (const GstVideoMasteringDisplayInfo
+    * minfo, GstCaps * caps)
+{
+  gchar *s;
+
+  g_return_val_if_fail (minfo != NULL, FALSE);
+  g_return_val_if_fail (GST_IS_CAPS (caps), FALSE);
+  g_return_val_if_fail (gst_caps_is_writable (caps), FALSE);
+
+  s = gst_video_mastering_display_info_to_string (minfo);
+  if (!s)
+    return FALSE;
+
+  gst_caps_set_simple (caps, "mastering-display-metadata", G_TYPE_STRING, s, NULL);
+  g_free (s);
+
+  return TRUE;
+}
+
 /**
  * gst_video_mastering_display_metadata_is_equal:
  * @minfo: a #GstVideoMasteringDisplayMetadata
diff --git a/gst-libs/gst/video/video-hdr.h b/gst-libs/gst/video/video-hdr.h
index b9e9d0b..92fbacf 100644
--- a/gst-libs/gst/video/video-hdr.h
+++ b/gst-libs/gst/video/video-hdr.h
@@ -25,7 +25,24 @@
 
 G_BEGIN_DECLS
 
+typedef struct _GstVideoMasteringDisplayInfoCoordinates GstVideoMasteringDisplayInfoCoordinates;
+typedef struct _GstVideoMasteringDisplayInfo GstVideoMasteringDisplayInfo;
 typedef struct _GstVideoHDR GstVideoHDR;
+/**
+ * GstVideoMasteringDisplayInfoCoordinates:
+ * @x: the x coordinate of CIE 1931 color space in unit of 0.00002.
+ * @y: the y coordinate of CIE 1931 color space in unit of 0.00002.
+ *
+ * Used to represent display_primaries and white_point of
+ * #GstVideoMasteringDisplayInfo struct. See #GstVideoMasteringDisplayInfo
+ *
+ * Since: 1.18
+ */
+struct _GstVideoMasteringDisplayInfoCoordinates
+{
+  guint16 x;
+  guint16 y;
+};
 
 /**
  * GstVideoMasteringDisplayMetadata:
@@ -49,6 +66,20 @@ typedef struct {
   gdouble Wx, Wy;
   gdouble max_luma, min_luma;
 } GstVideoMasteringDisplayMetadata;
+struct _GstVideoMasteringDisplayInfo
+{
+  GstVideoMasteringDisplayInfoCoordinates display_primaries[3];
+  GstVideoMasteringDisplayInfoCoordinates white_point;
+  guint32 max_display_mastering_luminance;
+  guint32 min_display_mastering_luminance;
+
+  /*< private >*/
+  gpointer _gst_reserved[GST_PADDING];
+};
+
+
+GST_VIDEO_API
+void      gst_video_mastering_display_info_init         (GstVideoMasteringDisplayInfo * minfo);
 
 GST_VIDEO_API
 void      gst_video_mastering_display_metadata_init           (GstVideoMasteringDisplayMetadata * minfo);
@@ -60,6 +91,9 @@ GST_VIDEO_API
 gboolean  gst_video_mastering_display_metadata_from_caps_string (GstVideoMasteringDisplayMetadata * minfo,
                                                                  const gchar * mastering);
 
+GST_VIDEO_API
+gchar *   gst_video_mastering_display_info_to_string    (const GstVideoMasteringDisplayInfo * minfo);
+
 GST_VIDEO_API
 gboolean  gst_video_mastering_display_metadata_has_primaries (const GstVideoMasteringDisplayMetadata * minfo);
 
@@ -70,6 +104,10 @@ GST_VIDEO_API
 gboolean  gst_video_mastering_display_metadata_is_equal      (const GstVideoMasteringDisplayMetadata * minfo,
                                                               const GstVideoMasteringDisplayMetadata * other);
 
+GST_VIDEO_API
+gboolean  gst_video_mastering_display_info_add_to_caps  (const GstVideoMasteringDisplayInfo * minfo,
+                                                         GstCaps * caps);
+
 /**
  * GstVideoContentLightMeta:
  * @maxCLL: Maximum Content Light Level (cd/m^2)
-- 
2.25.1

