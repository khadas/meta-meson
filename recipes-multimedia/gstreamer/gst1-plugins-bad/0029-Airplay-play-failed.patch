diff --git a/gst/mpegtsdemux/tsdemux.c b/gst/mpegtsdemux/tsdemux.c
index 39e36fb..7a5fc78 100644
--- a/gst/mpegtsdemux/tsdemux.c
+++ b/gst/mpegtsdemux/tsdemux.c
@@ -308,6 +308,7 @@ enum
   PROP_LATENCY,
   PROP_SEND_SCTE35_EVENTS,
   PROP_PROTECT_PTS,
+  PROP_SWITCH_FILE_SRC,
   /* FILL ME */
 };
 
@@ -451,6 +452,11 @@ gst_ts_demux_class_init (GstTSDemuxClass * klass)
           "if cal pts error, protect pts", FALSE,
           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
 
+  g_object_class_install_property (gobject_class, PROP_SWITCH_FILE_SRC,
+      g_param_spec_boolean ("switch-filesrc", "switch-filesrc",
+          "Local multimedia property flag.", FALSE,
+          G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+
   element_class = GST_ELEMENT_CLASS (klass);
   gst_element_class_add_pad_template (element_class,
       gst_static_pad_template_get (&video_template));
@@ -529,6 +535,7 @@ gst_ts_demux_init (GstTSDemux * demux)
   demux->program_number = -1;
   demux->no_check_pcr_count = 0;
   demux->latency = DEFAULT_LATENCY;
+  demux->switch_file_src = FALSE;
   gst_ts_demux_reset (base);
 
   g_mutex_init (&demux->lock);
@@ -562,6 +569,10 @@ gst_ts_demux_set_property (GObject * object, guint prop_id,
     case PROP_PROTECT_PTS:
       MPEG_TS_BASE_PACKETIZER (demux)->protect_pts = g_value_get_boolean (value);
       break;
+    case PROP_SWITCH_FILE_SRC:
+      demux->switch_file_src = g_value_get_boolean(value);
+      GST_WARNING("switch_filesrc:%d", demux->switch_file_src);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
   }
@@ -3614,13 +3625,17 @@ gst_ts_demux_push_pending_data (GstTSDemux * demux, TSDemuxStream * stream,
       GST_TIME_FORMAT, (buffer_list ? "list" : ""), GST_TIME_ARGS (stream->pts),
       GST_TIME_ARGS (stream->dts));
 
-  GstClockTime dur;
-  gst_ts_demux_get_duration (demux, &dur);
-  if( dur<stream->pts )
+  if( demux->switch_file_src )
   {
-    GST_ELEMENT_ERROR(demux, RESOURCE, FAILED, ("GStreamer encountered a general resource error"), ("GStreamer encountered a general resource error"));
-    res = GST_FLOW_ERROR;
-    goto beach;
+      GstClockTime dur;
+      gst_ts_demux_get_duration (demux, &dur);
+      if( dur < stream->pts )
+      {
+         GST_ELEMENT_ERROR(demux, RESOURCE, FAILED, ("Duration is shorter than the start time resource error"),
+             ("Duration is shorter than the start time resource error"));
+         res = GST_FLOW_ERROR;
+         goto beach;
+      }
   }
 
   if (GST_CLOCK_TIME_IS_VALID (stream->dts)) {
diff --git a/gst/mpegtsdemux/tsdemux.h b/gst/mpegtsdemux/tsdemux.h
index dc4747a..e347cb1 100644
--- a/gst/mpegtsdemux/tsdemux.h
+++ b/gst/mpegtsdemux/tsdemux.h
@@ -70,6 +70,7 @@ struct _GstTSDemux
 
   gboolean have_group_id;
   guint group_id;
+  gboolean switch_file_src;
 
   /* the following vars must be protected with the OBJECT_LOCK as they can be
    * accessed from the application thread and the streaming thread */
