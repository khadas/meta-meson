diff --git a/gst/mpegtsdemux/gstmpegdesc.h b/gst/mpegtsdemux/gstmpegdesc.h
index 36f0dba..5e4320a 100644
--- a/gst/mpegtsdemux/gstmpegdesc.h
+++ b/gst/mpegtsdemux/gstmpegdesc.h
@@ -220,6 +220,7 @@
 
 /* registration_descriptor format IDs */
 #define DRF_ID_HDMV       0x48444d56
+#define DRF_ID_HDCP       0x48444350
 #define DRF_ID_VC1        0x56432D31   /* defined in RP227 */
 #define DRF_ID_DTS1       0x44545331
 #define DRF_ID_DTS2       0x44545332
diff --git a/gst/mpegtsdemux/tsdemux.c b/gst/mpegtsdemux/tsdemux.c
index 634d466..fc8375a 100644
--- a/gst/mpegtsdemux/tsdemux.c
+++ b/gst/mpegtsdemux/tsdemux.c
@@ -229,6 +229,7 @@ struct _TSDemuxStream
   TSDemuxADTSParsingInfos atdsInfos;
   //for hdcp parse
   gboolean hdcp_content_flag;
+  gboolean hdcp_have_iv;
   guchar hdcp_contents[16];
 };
 
@@ -1749,8 +1750,16 @@ create_pad_for_stream (MpegTSBase * base, MpegTSBaseStream * bstream,
       break;
     case GST_MPEGTS_STREAM_TYPE_VIDEO_H264:
       is_video = TRUE;
-      caps = gst_caps_new_simple ("video/x-h264",
-          "stream-format", G_TYPE_STRING, "byte-stream", NULL);
+      if (program->registration_id == DRF_ID_HDCP) {
+        stream->hdcp_content_flag = TRUE;
+        caps = gst_caps_new_simple("application/x-hdcp",
+            "stream-format", G_TYPE_STRING, "byte-stream",
+            "alignment", G_TYPE_STRING, "nal", NULL);
+      } else {
+         caps = gst_caps_new_simple("video/x-h264",
+              "stream-format", G_TYPE_STRING, "byte-stream",
+              "alignment", G_TYPE_STRING, "nal", NULL);
+       }
       break;
     case GST_MPEGTS_STREAM_TYPE_VIDEO_HEVC:
       is_video = TRUE;
@@ -2651,10 +2660,10 @@ gst_ts_demux_parse_pes_header (GstTSDemux * demux, TSDemuxStream * stream,
              ((guint32 *)header.private_data)[2],
              ((guint32 *)header.private_data)[3]);*/
     memcpy(stream->hdcp_contents, header.private_data, 16);
-    stream->hdcp_content_flag = TRUE;
+    stream->hdcp_have_iv = TRUE;
   }else{
-    GST_DEBUG("Header buffer set private not set\n");
-    stream->hdcp_content_flag = FALSE;
+    GST_DEBUG("Header buffer no private data\n");
+    stream->hdcp_have_iv = FALSE;
   }
 
   if (stream->target_pes_substream != 0
@@ -3584,9 +3593,9 @@ gst_ts_demux_push_pending_data (GstTSDemux * demux, TSDemuxStream * stream,
     memcpy(iv, stream->hdcp_contents, 16);
     iv_buffer = gst_buffer_new_wrapped(iv, 16);
     GstStructure * drm_info_struct = gst_structure_new("drm_info",
-                                                       "secure", G_TYPE_BOOLEAN, TRUE,
-                                                       "iv", GST_TYPE_BUFFER, iv_buffer,
-                                                       NULL);
+                                                      "secure", G_TYPE_BOOLEAN, stream->hdcp_have_iv,
+                                                      "iv", GST_TYPE_BUFFER, iv_buffer,
+                                                      NULL);
     if (drm_info_struct) {
         /*GST_DEBUG("attaching secure IV to output buffer");*/
         gst_buffer_add_protection_meta(buffer, drm_info_struct);
