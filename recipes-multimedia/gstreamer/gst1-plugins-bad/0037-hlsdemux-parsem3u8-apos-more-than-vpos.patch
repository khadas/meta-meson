diff --git a/ext/hls/gsthlsdemux.c b/ext/hls/gsthlsdemux.c
index 528e45c..04ed2da 100644
--- a/ext/hls/gsthlsdemux.c
+++ b/ext/hls/gsthlsdemux.c
@@ -1325,6 +1325,39 @@ gst_hls_demux_select_bitrate (GstAdaptiveDemuxStream * stream, guint64 bitrate)
     return FALSE;
   }
 
+  if (NULL!= hlsdemux->current_variant) {
+    gint64 vSeq, aSe1;
+    GstClockTime vPostion, aPostion;
+    GList *mlist;
+
+    vPostion = hlsdemux->current_variant->m3u8->sequence_position;
+    vSeq = hlsdemux->current_variant->m3u8->sequence;
+
+    GST_DEBUG_OBJECT (hlsdemux,
+        "sequence %" G_GINT64_FORMAT
+        " and sequence_pos %" GST_TIME_FORMAT, vSeq, GST_TIME_ARGS (vPostion));
+
+    mlist = hlsdemux->current_variant->media[GST_HLS_MEDIA_TYPE_AUDIO];
+
+    while (mlist != NULL) {
+      GstHLSMedia *media = mlist->data;
+      GST_DEBUG_OBJECT (hlsdemux,
+          "mtype=%d, sequence %" G_GINT64_FORMAT
+          " and sequence_pos %" GST_TIME_FORMAT, media->mtype, media->playlist->sequence,
+          GST_TIME_ARGS (media->playlist->sequence_position));
+      aPostion = media->playlist->sequence_position;
+      if (GST_CLOCK_TIME_IS_VALID (vPostion) && GST_CLOCK_TIME_IS_VALID (aPostion) && (aPostion > vPostion))
+      {
+          if ((aPostion - vPostion) >  (6 * GST_SECOND))
+          {
+                GST_LOG_OBJECT (hlsdemux, "audio is too fast");
+                return FALSE;
+          }
+      }
+      mlist = mlist->next;
+    }
+  }
+
   gst_hls_demux_change_playlist (hlsdemux, bitrate / MAX (1.0,
           ABS (demux->segment.rate)), &changed);
   if (changed)
