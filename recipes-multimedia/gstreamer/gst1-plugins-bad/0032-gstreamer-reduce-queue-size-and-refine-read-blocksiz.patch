diff --git a/ext/hls/gsthlsdemux-util.c b/ext/hls/gsthlsdemux-util.c
index 95f61d4..8bac2f6 100644
--- a/ext/hls/gsthlsdemux-util.c
+++ b/ext/hls/gsthlsdemux-util.c
@@ -208,6 +208,11 @@ gst_hlsdemux_tsreader_find_pcrs_mpegts (GstHLSTSReader * r,
   const guint8 *data;
   gsize size;
 
+  *first_pcr = r->first_pcr = 0;
+  *last_pcr = r->last_pcr = 0;
+
+   return TRUE;
+
   if (!gst_buffer_map (buffer, &info, GST_MAP_READ))
     return FALSE;
 
diff --git a/ext/hls/gsthlsdemux.c b/ext/hls/gsthlsdemux.c
index d2ba84a..05e0205 100644
--- a/ext/hls/gsthlsdemux.c
+++ b/ext/hls/gsthlsdemux.c
@@ -1032,7 +1032,6 @@ gst_hls_demux_handle_buffer (GstAdaptiveDemux * demux,
     hls_stream->pending_pcr_buffer = NULL;
   }
 
-#if 0 //delete for airplay youtube play slowly
   if (!gst_hlsdemux_tsreader_find_pcrs (&hls_stream->tsreader, &buffer,
           &first_pcr, &last_pcr, &tags)
       && !at_eos) {
@@ -1040,7 +1039,6 @@ gst_hls_demux_handle_buffer (GstAdaptiveDemux * demux,
     hls_stream->pending_pcr_buffer = buffer;
     return GST_FLOW_OK;
   }
-#endif
 
   if (tags) {
     gst_adaptive_demux_stream_set_tags (stream, tags);
diff --git a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
index 404f959..a62effe 100644
--- a/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
+++ b/gst-libs/gst/adaptivedemux/gstadaptivedemux.c
@@ -129,7 +129,9 @@ GST_DEBUG_CATEGORY (adaptivedemux_debug);
 #define DEFAULT_FAILED_COUNT 3
 #define DEFAULT_CONNECTION_SPEED 0
 #define DEFAULT_BITRATE_LIMIT 0.8f
-#define SRC_QUEUE_MAX_BYTES 20 * 1024 * 1024    /* For safety. Large enough to hold a segment. */
+#define SRC_QUEUE_MAX_BYTES 8 * 1024 * 1024    /* For safety. Large enough to hold a segment. */
+#define SRC_QUEUE_MAX_BUFS 3000
+
 #define NUM_LOOKBACK_FRAGMENTS 3
 
 #define GST_MANIFEST_GET_LOCK(d) (&(GST_ADAPTIVE_DEMUX_CAST(d)->priv->manifest_lock))
@@ -3104,7 +3106,7 @@ gst_adaptive_demux_stream_update_source (GstAdaptiveDemuxStream * stream,
       return FALSE;
 
     g_object_set (queue, "max-size-bytes", (guint) SRC_QUEUE_MAX_BYTES, NULL);
-    g_object_set (queue, "max-size-buffers", (guint) 0, NULL);
+    g_object_set (queue, "max-size-buffers", (guint) SRC_QUEUE_MAX_BUFS, NULL);
     g_object_set (queue, "max-size-time", (guint64) 0, NULL);
 
     uri_handler = gst_element_make_from_uri (GST_URI_SRC, uri, NULL, NULL);
