diff --git a/gst/videoparsers/gstmpegvideoparse.c b/gst/videoparsers/gstmpegvideoparse.c
index 7f64934..025464e 100644
--- a/gst/videoparsers/gstmpegvideoparse.c
+++ b/gst/videoparsers/gstmpegvideoparse.c
@@ -87,6 +87,9 @@ static void gst_mpegv_parse_set_property (GObject * object, guint prop_id,
     const GValue * value, GParamSpec * pspec);
 static void gst_mpegv_parse_get_property (GObject * object, guint prop_id,
     GValue * value, GParamSpec * pspec);
+static gboolean gst_mpegv_parse_process_sc (GstMpegvParse * mpvparse,
+    GstMapInfo * info, gint off, GstMpegVideoPacket * packet,
+    gboolean * need_more);
 
 static void
 gst_mpegv_parse_set_property (GObject * object, guint property_id,
@@ -272,6 +275,7 @@ gst_mpegv_parse_process_config (GstMpegvParse * mpvparse, GstMapInfo * info,
     guint size)
 {
   GstMpegVideoPacket packet;
+  GstMpegVideoPacket nextPacket;
   guint8 *data_with_prefix;
   gint i;
 
@@ -310,6 +314,17 @@ gst_mpegv_parse_process_config (GstMpegvParse * mpvparse, GstMapInfo * info,
 
   GST_LOG_OBJECT (mpvparse, "accepting parsed config size %d", size);
 
+  /*parse sequence extention header if packet included*/
+  if (gst_mpeg_video_parse (&nextPacket, packet.data, packet.size, packet.offset))
+  {
+    gboolean need_more = FALSE;
+    GstMapInfo map;
+    packet.offset = nextPacket.offset;
+    packet.type = nextPacket.type;
+    GST_LOG_OBJECT (mpvparse, "next packet.offset:%d,packet.type:%d", packet.offset,packet.type);
+    gst_mpegv_parse_process_sc(mpvparse, &map, packet.offset, &packet, &need_more);
+  }
+
   /* Set mpeg version, and parse sequence extension */
   mpvparse->config_flags = FLAG_NONE;
   for (i = 0; i < mpvparse->ext_count; ++i) {
