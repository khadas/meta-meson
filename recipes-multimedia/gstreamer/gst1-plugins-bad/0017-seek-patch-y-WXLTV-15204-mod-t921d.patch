diff --git a/gst/mpegdemux/gstmpegdemux.c b/gst/mpegdemux/gstmpegdemux.c
index 9448e29..b5fa342 100644
--- a/gst/mpegdemux/gstmpegdemux.c
+++ b/gst/mpegdemux/gstmpegdemux.c
@@ -188,6 +188,8 @@ static void gst_segment_set_position (GstSegment * segment, GstFormat format,
 static void gst_segment_set_duration (GstSegment * segment, GstFormat format,
     guint64 duration);
 
+static gboolean g_notSeekStatus = TRUE;
+
 /*static guint gst_ps_demux_signals[LAST_SIGNAL] = { 0 };*/
 
 GType
@@ -1441,6 +1443,8 @@ gst_ps_demux_src_event (GstPad * pad, GstObject * parent, GstEvent * event)
 
   switch (GST_EVENT_TYPE (event)) {
     case GST_EVENT_SEEK:
+      if(!g_notSeekStatus)  return res;
+
       if (demux->random_access) {
         res = gst_ps_demux_handle_seek_pull (demux, event);
       } else {
@@ -1567,6 +1571,7 @@ gst_ps_demux_src_query (GstPad * pad, GstObject * parent, GstQuery * query)
     }
     case GST_QUERY_SEEKING:{
       GstFormat fmt;
+      if(!g_notSeekStatus)    goto not_supported;
 
       gst_query_parse_seeking (query, &fmt, NULL, NULL, NULL);
 
@@ -2328,6 +2333,15 @@ gst_ps_demux_data_cb (GstPESFilter * filter, gboolean first,
   datalen = map.size;
   start_code = filter->start_code;
   id = filter->id;
+
+  if( ((demux->src_segment.position) > (demux->src_segment.duration+3000000000) || 
+    (MPEGTIME_TO_GSTTIME (demux->current_scr) > (demux->src_segment.duration+3000000000)) ) 
+    && g_notSeekStatus)
+  {
+    g_notSeekStatus = FALSE;
+    GST_ELEMENT_WARNING (demux, RESOURCE, SEEK, ("format not support"), ("vob(VOB) format not support"));
+  }
+
   if (first) {
     gint layer = 0;
     /* find the stream type */
@@ -3341,6 +3355,7 @@ gst_ps_demux_change_state (GstElement * element, GstStateChange transition)
       gst_ps_demux_reset (demux);
       break;
     case GST_STATE_CHANGE_READY_TO_NULL:
+      g_notSeekStatus = TRUE;
       gst_pes_filter_uninit (&demux->filter);
       break;
     default:
