diff --git a/sys/v4l2/gstv4l2object.c b/sys/v4l2/gstv4l2object.c
index 40a536f..369a25c 100755
--- a/sys/v4l2/gstv4l2object.c
+++ b/sys/v4l2/gstv4l2object.c
@@ -3523,6 +3523,41 @@ field_to_str (enum v4l2_field f)
   return "unknown";
 }
 
+static void
+set_amlogic_vdec_parm(GstV4l2Object *v4l2object, struct v4l2_streamparm *streamparm)
+{
+  struct aml_dec_params *decParm= (struct aml_dec_params*)streamparm->parm.raw_data;
+  const char *env;
+
+  decParm->cfg.metadata_config_flag = 1 << 13;
+
+  if (v4l2object->type == V4L2_BUF_TYPE_VIDEO_OUTPUT
+      || v4l2object->type == V4L2_BUF_TYPE_VIDEO_OUTPUT_MPLANE)
+  {
+    env= getenv("VENDOR_MEDIA_GST_VIDEO_SET_DW_MODE");
+    if ( env )
+    {
+      int dwMode= atoi(env);
+      switch( dwMode )
+      {
+         case 0: case 1: case 2: case 3: case 4: case 16:
+            decParm->cfg.double_write_mode= dwMode;
+            decParm->parms_status |= V4L2_CONFIG_PARM_DECODE_CFGINFO;
+            break;
+      }
+    }
+
+    if (v4l2object->ioctl (v4l2object->video_fd, VIDIOC_S_PARM, streamparm) < 0)
+    {
+      GST_DEBUG_OBJECT (v4l2object->dbg_obj, "set vdec parm fail");
+    }
+    else
+    {
+      GST_DEBUG_OBJECT (v4l2object->dbg_obj, "Set dwMode to %d", decParm->cfg.double_write_mode);
+    }
+  }
+}
+
 static gboolean
 gst_v4l2_object_set_format_full (GstV4l2Object * v4l2object, GstCaps * caps,
     gboolean try_only, GstV4l2Error * error)
@@ -3554,6 +3589,10 @@ gst_v4l2_object_set_format_full (GstV4l2Object * v4l2object, GstCaps * caps,
   if (!try_only)
     GST_V4L2_CHECK_NOT_ACTIVE (v4l2object);
 
+  memset (&streamparm, 0x00, sizeof (struct v4l2_streamparm));
+  streamparm.type = v4l2object->type;
+  set_amlogic_vdec_parm(v4l2object, &streamparm);
+
   is_mplane = V4L2_TYPE_IS_MULTIPLANAR (v4l2object->type);
 
   gst_video_info_init (&info);
@@ -3936,9 +3975,6 @@ gst_v4l2_object_set_format_full (GstV4l2Object * v4l2object, GstCaps * caps,
   GST_DEBUG_OBJECT (v4l2object->dbg_obj, "Desired framerate: %u/%u", fps_n,
       fps_d);
 
-  memset (&streamparm, 0x00, sizeof (struct v4l2_streamparm));
-  streamparm.type = v4l2object->type;
-
   if (v4l2object->ioctl (fd, VIDIOC_G_PARM, &streamparm) < 0)
     goto get_parm_failed;
 
