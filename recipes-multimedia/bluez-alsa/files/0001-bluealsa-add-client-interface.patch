Index: git/src/a2dp-aac.c
===================================================================
--- git.orig/src/a2dp-aac.c
+++ git/src/a2dp-aac.c
@@ -137,6 +137,8 @@ void a2dp_aac_init(void) {
 		a2dp_aac_source.capabilities.aac.channels = AAC_CHANNELS_1;
 	if (config.a2dp.force_44100)
 		AAC_SET_FREQUENCY(a2dp_aac_source.capabilities.aac, AAC_SAMPLING_FREQ_44100);
+	else if (config.a2dp.force_48000)
+		AAC_SET_FREQUENCY(a2dp_aac_source.capabilities.aac, AAC_SAMPLING_FREQ_48000);
 
 	if (!config.aac_prefer_vbr)
 		a2dp_aac_source.capabilities.aac.vbr = 0;
Index: git/src/a2dp.c
===================================================================
--- git.orig/src/a2dp.c
+++ git/src/a2dp.c
@@ -594,6 +594,13 @@ static unsigned int a2dp_codec_select_sa
 					return codec->samplings[slot][i].value;
 				break;
 			}
+	if (config.a2dp.force_48000)
+		for (i = 0; i < codec->samplings_size[slot]; i++)
+			if (codec->samplings[slot][i].frequency == 48000) {
+				if (capabilities & codec->samplings[slot][i].value)
+					return codec->samplings[slot][i].value;
+				break;
+			}
 
 	/* favor higher sampling frequencies */
 	for (i = codec->samplings_size[slot]; i > 0; i--)
Index: git/src/a2dp-mpeg.c
===================================================================
--- git.orig/src/a2dp-mpeg.c
+++ git/src/a2dp-mpeg.c
@@ -173,6 +173,8 @@ void a2dp_mpeg_init(void) {
 		a2dp_mpeg_source.capabilities.mpeg.channel_mode = MPEG_CHANNEL_MODE_MONO;
 	if (config.a2dp.force_44100)
 		a2dp_mpeg_source.capabilities.mpeg.frequency = MPEG_SAMPLING_FREQ_44100;
+	else if (config.a2dp.force_48000)
+		a2dp_mpeg_source.capabilities.mpeg.frequency = MPEG_SAMPLING_FREQ_48000;
 
 }
 
Index: git/src/a2dp-sbc.c
===================================================================
--- git.orig/src/a2dp-sbc.c
+++ git/src/a2dp-sbc.c
@@ -127,7 +127,7 @@ void a2dp_sbc_init(void) {
 			config.sbc_quality == SBC_QUALITY_XQPLUS) {
 		info("Activating SBC Dual Channel HD (SBC %s)",
 				config.sbc_quality == SBC_QUALITY_XQ ? "XQ" : "XQ+");
-		config.a2dp.force_44100 = true;
+		config.a2dp.force_48000 = true;
 	}
 
 	if (config.a2dp.force_mono)
@@ -139,6 +139,8 @@ void a2dp_sbc_init(void) {
 		a2dp_sbc_source.capabilities.sbc.channel_mode = SBC_CHANNEL_MODE_MONO;
 	if (config.a2dp.force_44100)
 		a2dp_sbc_source.capabilities.sbc.frequency = SBC_SAMPLING_FREQ_44100;
+	else if (config.a2dp.force_48000) // only provide 48000khz audio data.
+		a2dp_sbc_source.capabilities.sbc.frequency = SBC_SAMPLING_FREQ_48000;
 
 }
 
Index: git/src/bluealsa-config.c
===================================================================
--- git.orig/src/bluealsa-config.c
+++ git/src/bluealsa-config.c
@@ -83,6 +83,7 @@ struct ba_config config = {
 	.a2dp.volume = false,
 	.a2dp.force_mono = false,
 	.a2dp.force_44100 = false,
+	.a2dp.force_48000 = true,
 
 	/* Try to use high SBC encoding quality as a default. */
 	.sbc_quality = SBC_QUALITY_HIGH,
Index: git/src/bluealsa-config.h
===================================================================
--- git.orig/src/bluealsa-config.h
+++ git/src/bluealsa-config.h
@@ -119,6 +119,8 @@ struct ba_config {
 		 * to force lower sampling in order to save Bluetooth bandwidth. */
 		bool force_44100;
 
+		bool force_48000;
+
 	} a2dp;
 
 	/* BlueALSA supports 5 SBC qualities: low, medium, high, XQ and XQ+. The XQ
Index: git/src/main.c
===================================================================
--- git.orig/src/main.c
+++ git/src/main.c
@@ -380,7 +380,7 @@ int main(int argc, char **argv) {
 			config.a2dp.force_mono = true;
 			break;
 		case 7 /* --a2dp-force-audio-cd */ :
-			config.a2dp.force_44100 = true;
+			config.a2dp.force_48000 = true;
 			break;
 		case 9 /* --a2dp-volume */ :
 			config.a2dp.volume = true;
Index: git/configure.ac
===================================================================
--- git.orig/configure.ac
+++ git/configure.ac
@@ -245,6 +245,10 @@ AC_ARG_ENABLE([rfcomm],
 	[AS_HELP_STRING([--enable-rfcomm], [enable building of bluealsa-rfcomm tool])])
 AM_CONDITIONAL([ENABLE_RFCOMM], [test "x$enable_rfcomm" = "xyes"])
 
+AC_ARG_ENABLE([aml],
+	[AS_HELP_STRING([--enable-aml], [enable building of bluealsa-aml tool])])
+AM_CONDITIONAL([ENABLE_AML], [test "x$enable_aml" = "xyes"])
+
 AC_ARG_ENABLE([a2dpconf],
 	[AS_HELP_STRING([--enable-a2dpconf], [enable building of a2dpconf tool])])
 AM_CONDITIONAL([ENABLE_A2DPCONF], [test "x$enable_a2dpconf" = "xyes"])
@@ -344,6 +348,7 @@ AC_CONFIG_FILES([
 	utils/Makefile
 	utils/aplay/Makefile
 	utils/cli/Makefile
+	utils/aml/Makefile
 	utils/rfcomm/Makefile
 	test/Makefile])
 AC_OUTPUT
Index: git/utils/Makefile.am
===================================================================
--- git.orig/utils/Makefile.am
+++ git/utils/Makefile.am
@@ -1,7 +1,7 @@
 # BlueALSA - Makefile.am
 # Copyright (c) 2016-2021 Arkadiusz Bokowy
 
-SUBDIRS = aplay cli rfcomm
+SUBDIRS = aplay cli rfcomm aml
 
 bin_PROGRAMS =
 
