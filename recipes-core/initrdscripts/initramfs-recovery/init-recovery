#!/bin/sh

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# Copied from initramfs-framework. The core of this script probably should be
# turned into initramfs-framework modules to reduce duplication.
udev_daemon() {
    OPTIONS="/sbin/udev/udevd /sbin/udevd /lib/udev/udevd /lib/systemd/systemd-udevd"

    for o in $OPTIONS; do
        if [ -x "$o" ]; then
            echo $o
            return 0
        fi
    done

    return 1
}

_UDEV_DAEMON=`udev_daemon`

## for kernel 5.15 ko install
kernel_515_module_install() {
    if [ -f /modules/install.sh ]; then
       cd /modules
       /modules/install.sh
       cd -
    fi
}

attach_unifykey() {
    if [ -f /sys/class/unifykeys/attach ]; then
        echo 1 > /sys/class/unifykeys/attach
    fi
}

wait_for_emmc_partition () {
    i=1
    while [ "$i" -le 30 ]
    do
        if [  -d /sys/block/mmcblk0/mmcblk0p1/ ]; then
            echo "mmcblk0p1 ready"
            break
        fi

        echo "mmcblk0p1 is not ready.  Waited for 50ms"
        sleep 0.05
        i=$((i+1))
    done
}

upstream_emmc_mount() {
  echo " do upstream emmc mount"
  if [ ! -f /dev/misc ];then
    echo "/dev/misc not exist!"
    wait_for_emmc_partition
    if [  -d /sys/block/mmcblk0/mmcblk0p1/ ]; then
      cd /sys/block/mmcblk0/
      for part in `ls | grep mmcblk0p`
      do
        cd $part
#        major=`cat uevent | grep MAJOR= | sed 's/.*=//'`
#        minor=`cat uevent | grep MINOR= | sed 's/.*=//'`
        partname=`cat uevent | grep PARTNAME= | sed 's/.*=//'`
#        echo "part: $part, partname $partname, major $major, minor: $minor"
#        mknod /dev/$partname b $major $minor
        ln -s /dev/$part  /dev/$partname
        cd ..
      done
    fi
    cd ~

  else
    echo "/dev/misc exist!"
  fi
}


early_setup() {
    mkdir -p /proc
    mkdir -p /sys
    mount -t proc proc /proc
    mount -t sysfs sysfs /sys
    mount -t devtmpfs none /dev
    mount -t tmpfs -o size=80% tmpfs /tmp

    # install kernel 5.15 modules.
    #kernel_515_module_install
    #upstream_emmc_mount

    mkdir -p /run
    mkdir -p /var/run

    mkdir -p /mnt

    $_UDEV_DAEMON --daemon
    udevadm trigger --action=add
}

boot_root() {
    # Watches the udev event queue, and exits if all current events are handled
    udevadm settle

    exec /sbin/init
}

early_setup
boot_root
