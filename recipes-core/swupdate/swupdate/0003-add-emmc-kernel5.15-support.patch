From 1ebd25c65e99f0e6446a01188a9e24326f12768c Mon Sep 17 00:00:00 2001
From: "Jiacai.Liu" <jiacai.liu@amlogic.com>
Date: Thu, 19 Oct 2023 10:39:20 +0800
Subject: [PATCH] yocto: fix kernel 5.15 swupdate fail

solution:
remove bl_off_set cause kernel 5.15 not have the node
add new bootloader_up partition to store bootloader
add detect: if have bootloader_up, no need to burn mmcblk0boot device

Verify:
local s4_ap222 kernel 5.15

Signed-off-by: Jiacai.Liu <jiacai.liu@amlogic.com>
---
 handlers/raw_handler.c | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/handlers/raw_handler.c b/handlers/raw_handler.c
index a2c8197..a61fcb5 100644
--- a/handlers/raw_handler.c
+++ b/handlers/raw_handler.c
@@ -138,7 +138,11 @@ static int getBootloaderOffset(int* bootloaderOffset)
   int             iret  = 0;
   char  buf[16]         = { 0 };
   int           readCnt = 0;
-
+  // bl_off_bytes is support for glx,and it not exist in kernel 5.15
+  if ( access("/sys/class/aml_store/bl_off_bytes",0)) {
+    *bootloaderOffset = 512;
+    return 0;
+  }
   iret = read_sysfs_val(PathBlOff, buf, 15, &readCnt);
   if (iret < 0) {
 	printf("fail when read path[%s]\n", PathBlOff);
@@ -160,6 +164,20 @@ static int install_bootloader(struct img_type *img) {
 
   unsigned int i = 0;
   char emmcPartitionPath[128];
+  if ( !access("/dev/bootloader_up",0)){
+    fdout = open("/dev/bootloader_up", O_RDWR);
+    if (fdout < 0) {
+      TRACE("open /dev/bootloader_up failed!\n");
+      return -1;
+    }
+    ret = copyimage(&fdout, img, NULL);
+    close(fdout);
+    if (ret != 0) {
+      TRACE("install %s failed!\n", "/dev/bootloader_up");
+      return -1;
+    }
+  }
+  else {
   for (i = USER; i < ARRAY_SIZE(sEmmcPartionName); i ++) {
 	memset(emmcPartitionPath, 0, sizeof(emmcPartitionPath));
 	sprintf(emmcPartitionPath, "/dev/%s", sEmmcPartionName[i]);
@@ -194,6 +212,7 @@ static int install_bootloader(struct img_type *img) {
 	  }
 	}
   }
+  }
 
   return 0;
 }
-- 
2.25.1

